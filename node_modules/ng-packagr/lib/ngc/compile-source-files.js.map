{"version":3,"file":"compile-source-files.js","sourceRoot":"","sources":["../../../src/lib/ngc/compile-source-files.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,4CAA4C;AAE5C,mCAAmC;AACnC,iEAA4D;AAC5D,+FAAwF;AACxF,mEAA8D;AAK9D,SAAsB,kBAAkB,CACtC,KAAiB,EACjB,UAA0B,EAC1B,QAAgC,EAChC,qBAA+C,EAC/C,mBAAwC,EACxC,YAA0C,EAC1C,cAAuB;;QAEvB,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;QAEvC,MAAM,eAAe,qBAA4B,QAAQ,CAAC,OAAO,EAAK,YAAY,CAAE,CAAC;QAErF,IAAI,cAAc,GAAG,uCAAiB,CACpC,KAAK,EACL,UAAU,EACV,eAAe,EACf,qBAAqB,EACrB,mBAAmB,CACpB,CAAC;QACF,IAAI,cAAc,EAAE;YAClB,cAAc,GAAG,iEAA6B,CAAC,cAAc,EAAE,eAAe,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;SAC1G;QAED,kBAAkB;QAClB,MAAM,cAAc,GAAG,EAAE,CAAC,kBAAkB,CAAC;YAC3C,OAAO,EAAE,eAAe;YACxB,MAAM,EAAE,cAAc;SACvB,CAAC,CAAC;QAEH,uDAAuD;QACvD,kDAAkD;QAClD,MAAM,SAAS,GAAG,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC;QAErF,MAAM,MAAM,GAAG,EAAE,CAAC,kBAAkB,CAAC;YACnC,SAAS,EAAE,QAAQ,CAAC,SAAS;YAC7B,OAAO,EAAE,eAAe;YACxB,IAAI,EAAE,cAAc;YACpB,YAAY,EAAE,yCAAkB,CAAC,eAAe,CAAC;YACjD,SAAS;SACV,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC3D,OAAO,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAClH,CAAC;CAAA;AA5CD,gDA4CC","sourcesContent":["import * as ng from '@angular/compiler-cli';\nimport * as ts from 'typescript';\nimport * as log from '../util/log';\nimport { createEmitCallback } from './create-emit-callback';\nimport { redirectWriteFileCompilerHost } from '../ts/redirect-write-file-compiler-host';\nimport { cacheCompilerHost } from '../ts/cache-compiler-host';\nimport { StylesheetProcessor } from '../ng-v5/entry-point/resources/stylesheet-processor';\nimport { BuildGraph } from '../brocc/build-graph';\nimport { EntryPointNode } from '../ng-v5/nodes';\n\nexport async function compileSourceFiles(\n  graph: BuildGraph,\n  entryPoint: EntryPointNode,\n  tsConfig: ng.ParsedConfiguration,\n  moduleResolutionCache: ts.ModuleResolutionCache,\n  stylesheetProcessor: StylesheetProcessor,\n  extraOptions?: Partial<ng.CompilerOptions>,\n  declarationDir?: string\n) {\n  log.debug(`ngc (v${ng.VERSION.full})`);\n\n  const tsConfigOptions: ng.CompilerOptions = { ...tsConfig.options, ...extraOptions };\n\n  let tsCompilerHost = cacheCompilerHost(\n    graph,\n    entryPoint,\n    tsConfigOptions,\n    moduleResolutionCache,\n    stylesheetProcessor\n  );\n  if (declarationDir) {\n    tsCompilerHost = redirectWriteFileCompilerHost(tsCompilerHost, tsConfigOptions.basePath, declarationDir);\n  }\n\n  // ng.CompilerHost\n  const ngCompilerHost = ng.createCompilerHost({\n    options: tsConfigOptions,\n    tsHost: tsCompilerHost\n  });\n\n  // Don't use `ng.emit` as it doesn't output all errors.\n  // https://github.com/angular/angular/issues/24024\n  const emitFlags = tsConfigOptions.declaration ? tsConfig.emitFlags : ng.EmitFlags.JS;\n\n  const result = ng.performCompilation({\n    rootNames: tsConfig.rootNames,\n    options: tsConfigOptions,\n    host: ngCompilerHost,\n    emitCallback: createEmitCallback(tsConfigOptions),\n    emitFlags\n  });\n\n  const exitCode = ng.exitCodeFromResult(result.diagnostics);\n  return exitCode === 0 ? Promise.resolve() : Promise.reject(new Error(ng.formatDiagnostics(result.diagnostics)));\n}\n"]}