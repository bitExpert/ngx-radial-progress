{"version":3,"file":"nodes.js","sourceRoot":"","sources":["../../../src/lib/ng-v5/nodes.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AAEjC,wCAAqC;AACrC,4CAA4D;AAI5D,mDAA+C;AAElC,QAAA,eAAe,GAAG,wBAAwB,CAAC;AAC3C,QAAA,mBAAmB,GAAG,4BAA4B,CAAC;AAEhE,oDAAoD;AACvC,QAAA,iBAAiB,GAAG,SAAS,CAAC;AAE3C,kCAAkC;AACrB,QAAA,eAAe,GAAG,OAAO,CAAC;AAEvC,SAAgB,YAAY,CAAC,IAAU;IACrC,OAAO,IAAI,CAAC,IAAI,KAAK,2BAAmB,CAAC;AAC3C,CAAC;AAFD,oCAEC;AAED,SAAgB,SAAS,CAAC,IAAU;IAClC,OAAO,IAAI,CAAC,IAAI,KAAK,uBAAe,CAAC;AACvC,CAAC;AAFD,8BAEC;AAED,SAAgB,YAAY;IAC1B,OAAO,WAAE,CAAC,YAAY,CAAC,CAAC;AAC1B,CAAC;AAFD,oCAEC;AAED,SAAgB,sBAAsB;IACpC,OAAO,WAAE,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,qBAAY,CAAC,CAAC;AAC5C,CAAC;AAFD,wDAEC;AAED,SAAgB,iBAAiB;IAC/B,OAAO,WAAE,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,gBAAO,CAAC,CAAC;AACvC,CAAC;AAFD,8CAEC;AAED,SAAgB,SAAS,CAAC,KAAa;IACrC,OAAO,KAAK,CAAC,UAAU,CAAC,yBAAiB,CAAC,CAAC;AAC7C,CAAC;AAFD,8BAEC;AAED,SAAgB,OAAO,CAAC,IAAY;IAClC,OAAO,GAAG,yBAAiB,GAAG,IAAI,EAAE,CAAC;AACvC,CAAC;AAFD,0BAEC;AAED,SAAgB,WAAW,CAAC,GAAW;IACrC,IAAI,GAAG,CAAC,UAAU,CAAC,yBAAiB,CAAC,EAAE;QACrC,OAAO,GAAG,CAAC,SAAS,CAAC,yBAAiB,CAAC,MAAM,CAAC,CAAC;KAChD;AACH,CAAC;AAJD,kCAIC;AAED,SAAgB,KAAK,CAAC,IAAY;IAChC,OAAO,GAAG,uBAAe,GAAG,IAAI,EAAE,CAAC;AACrC,CAAC;AAFD,sBAEC;AAED,MAAa,cAAe,SAAQ,WAAI;IAGtC,YAA4B,GAAW,EAAW,gBAA4B;QAC5E,KAAK,CAAC,GAAG,CAAC,CAAC;QADe,QAAG,GAAH,GAAG,CAAQ;QAAW,qBAAgB,GAAhB,gBAAgB,CAAY;QAFrE,SAAI,GAAG,2BAAmB,CAAC;QAUpC,UAAK,GAAG;YACN,gBAAgB,EAAE,IAAI,sBAAS,EAAE;YACjC,qBAAqB,EAAE,EAAE,CAAC,2BAA2B,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5E,6BAA6B,EAAE,EAAE,CAAC,2BAA2B,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACrF,CAAC;QATA,IAAI,gBAAgB,EAAE;YACpB,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;SAChD;IACH,CAAC;CAaF;AAtBD,wCAsBC;AAED,MAAa,WAAY,SAAQ,WAAI;IAArC;;QACW,SAAI,GAAG,uBAAe,CAAC;QAGhC,UAAK,GAAG;YACN,gBAAgB,EAAE,IAAI,sBAAS,EAAE;SAClC,CAAC;IACJ,CAAC;CAAA;AAPD,kCAOC","sourcesContent":["import * as ts from 'typescript';\nimport { ParsedConfiguration } from '@angular/compiler-cli';\nimport { Node } from '../brocc/node';\nimport { by, isInProgress, isDirty } from '../brocc/select';\nimport { NgEntryPoint } from '../ng-package-format/entry-point';\nimport { NgPackage } from '../ng-package-format/package';\nimport { DestinationFiles } from '../ng-package-format/shared';\nimport { FileCache } from '../file/file-cache';\n\nexport const TYPE_NG_PACKAGE = 'application/ng-package';\nexport const TYPE_NG_ENTRY_POINT = 'application/ng-entry-point';\n\n/** A node that can be read through the `fs` api. */\nexport const URL_PROTOCOL_FILE = 'file://';\n\n/** A node specific to angular. */\nexport const URL_PROTOCOL_NG = 'ng://';\n\nexport function isEntryPoint(node: Node): node is EntryPointNode {\n  return node.type === TYPE_NG_ENTRY_POINT;\n}\n\nexport function isPackage(node: Node): node is PackageNode {\n  return node.type === TYPE_NG_PACKAGE;\n}\n\nexport function byEntryPoint() {\n  return by(isEntryPoint);\n}\n\nexport function isEntryPointInProgress() {\n  return by(isEntryPoint).and(isInProgress);\n}\n\nexport function isEntryPointDirty() {\n  return by(isEntryPoint).and(isDirty);\n}\n\nexport function isFileUrl(value: string): boolean {\n  return value.startsWith(URL_PROTOCOL_FILE);\n}\n\nexport function fileUrl(path: string): string {\n  return `${URL_PROTOCOL_FILE}${path}`;\n}\n\nexport function fileUrlPath(url: string): string {\n  if (url.startsWith(URL_PROTOCOL_FILE)) {\n    return url.substring(URL_PROTOCOL_FILE.length);\n  }\n}\n\nexport function ngUrl(path: string): string {\n  return `${URL_PROTOCOL_NG}${path}`;\n}\n\nexport class EntryPointNode extends Node {\n  readonly type = TYPE_NG_ENTRY_POINT;\n\n  constructor(public readonly url: string, readonly sourcesFileCache?: FileCache) {\n    super(url);\n\n    if (sourcesFileCache) {\n      this.cache.sourcesFileCache = sourcesFileCache;\n    }\n  }\n\n  cache = {\n    sourcesFileCache: new FileCache(),\n    moduleResolutionCache: ts.createModuleResolutionCache(process.cwd(), s => s),\n    analysisModuleResolutionCache: ts.createModuleResolutionCache(process.cwd(), s => s)\n  };\n\n  data: {\n    destinationFiles: DestinationFiles;\n    entryPoint: NgEntryPoint;\n    tsConfig?: ParsedConfiguration;\n  };\n}\n\nexport class PackageNode extends Node {\n  readonly type = TYPE_NG_PACKAGE;\n  data: NgPackage;\n\n  cache = {\n    sourcesFileCache: new FileCache()\n  };\n}\n"]}